{
  "db": "PostgreSQL",
  "3d8b9ae1de860bbcb9e6d0715596de2b18c1948ddbbdc590693e87f8008fb840": {
    "describe": {
      "columns": [
        {
          "name": "max",
          "ordinal": 0,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n                select max(price) from nft_auction_bid\n                where auction = $1 and declined = false\n                "
  },
  "4382a5bdf9ecad4fc8b4d10a65986abd950e925726c297745dbd5619e0ef7461": {
    "describe": {
      "columns": [
        {
          "name": "address!: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection?: Address",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "owner?: Address",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "manager?: Address",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "name?",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "description?",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "burned!",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "updated!",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 8,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select address as \"address!: Address\", collection as \"collection?: Address\", owner as \"owner?: Address\", \n            manager as \"manager?: Address\", name as \"name?\", description as \"description?\", burned as \"burned!\", \n            updated as \"updated!\", tx_lt as \"tx_lt!\"\n        from nft where address = $1\n        "
  },
  "4892bd19871eabdb3159416558537a4e32ddda4ff98a48fd35a47de0490833e0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Bool",
          "Timestamp"
        ]
      }
    },
    "query": "\n        insert into nft_auction_bid (auction, buyer, price, declined, created_at)\n        values ($1, $2, $3, $4, $5)\n        on conflict (auction, buyer, price) where declined = false do update\n        set declined = $4\n        "
  },
  "5893313eea1327d2a133872fbfff37d1ac8f7248c7272bc4b47b2882524ffbfe": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          },
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_direct_sell (address, nft, collection, price_token, price, seller, finished_at, expired_at,\n            state, created, updated, tx_lt)\n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)\n        on conflict (address) where tx_lt <= $12 do update\n        set collection = $3, price = $5, finished_at = $7, expired_at = $8, state = $9, created = $10, updated = $11,\n            tx_lt = $12\n        "
  },
  "58dad5adfd8bd05588eb0da4667fda1a158f8c0ba252c7f0bf4d23b22ff29b5b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auction",
                  "direct_buy",
                  "direct_sell",
                  "nft",
                  "collection"
                ]
              },
              "name": "event_category"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auction_deployed",
                  "auction_created",
                  "auction_ownership_transferred",
                  "auction_active",
                  "auction_declined",
                  "auction_bid_placed",
                  "auction_bid_declined",
                  "auction_cancelled",
                  "auction_complete",
                  "direct_buy_deployed",
                  "direct_buy_declined",
                  "direct_buy_ownership_transferred",
                  "direct_buy_state_changed",
                  "direct_sell_deployed",
                  "direct_sell_declined",
                  "direct_sell_ownership_transferred",
                  "direct_sell_state_changed",
                  "nft_owner_changed",
                  "nft_manager_changed",
                  "collection_ownership_transferred",
                  "nft_created",
                  "nft_burned",
                  "auction_root_ownership_transferred",
                  "factory_direct_buy_ownership_transferred",
                  "factory_direct_sell_ownership_transferred"
                ]
              },
              "name": "event_type"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Int8",
          "Int8",
          "Jsonb"
        ]
      }
    },
    "query": "\n        insert into nft_events (event_cat, event_type, address, nft, collection, created_lt, created_at, args)\n        values ($1, $2, $3, $4, $5, $6, $7, $8)\n        "
  },
  "62008fe40397338856242ab47abfad895a20b660971c98e5ecd02c57c809288c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Text",
          "Text",
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_uri"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_uri"
            }
          },
          "Numeric",
          "Numeric",
          "Int4"
        ]
      }
    },
    "query": "\n        insert into nft_collection (address, owner, name, description, created, updated, logo, wallpaper,\n            total_price, max_price, owners_count)\n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        on conflict (address) where updated <= $6 do update\n        set owner = $2, name = $3, description = $4, \n            created = case when nft_collection.created < $5 then nft_collection.created else $5 end,\n            updated = $6, logo = $7, wallpaper = $8, total_price = $9, max_price = $10, owners_count = $11\n        "
  },
  "6377d2787c6e199bf403a396c79a1560b1b34f08e78186e852a5ae49c3e88b5d": {
    "describe": {
      "columns": [
        {
          "name": "price!: BigDecimal",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "price_token!: String",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select price as \"price!: BigDecimal\", price_token as \"price_token!: String\" from nft\n        inner join nft_direct_sell as direct_sell\n        on nft.address = direct_sell.nft\n        where nft.collection = $1 and direct_sell.state = 'active'\n        union\n        select price as \"price!: BigDecimal\", price_token as \"price_token!: String\" from nft\n        inner join nft_auction as auction\n        on nft.address = auction.nft\n        inner join nft_auction_bid as bid\n        on auction.address = bid.auction\n        where nft.collection = $1 and auction.status = 'active' and bid.declined = false\n        "
  },
  "65bf7a690fc322c7f88c9037591a768ab00a556388e4b2a2ab228e792292a218": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Text",
          "Text",
          "Bool",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft (address, collection, owner, manager, name, description, burned, updated, tx_lt)\n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n        on conflict (address) where tx_lt <= $9 do update\n        set collection = $2, owner = $3, manager = $4, name = $5, description = $6, burned = $7, updated = $8, \n            tx_lt = $9\n        "
  },
  "74cde259acad5d78d6ec5e83afcabc1080bc7e418cfe47f92f4ec4402857ce66": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auctionBid",
                  "directBuy",
                  "directSell"
                ]
              },
              "name": "nft_price_source"
            }
          },
          "Timestamp",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          }
        ]
      }
    },
    "query": "\n        insert into nft_price_history (source, source_type, ts, price, price_token, nft, collection)\n        values ($1, $2, $3, $4, $5, $6, $7)\n        "
  },
  "8ecdb525bc647d2cee353ceae65cc873c93b531296da06233d2f779d9b3c091c": {
    "describe": {
      "columns": [
        {
          "name": "nft?: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection?: Address",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select nft.address as \"nft?: Address\", collection as \"collection?: Address\" from nft\n        inner join nft_auction\n        on nft_auction.nft = nft.address\n        where nft_auction.address = $1\n        "
  },
  "9237eb8719822fb07d7b0a5ea71cd50bd007ce4eb26811fe4c26a8db1b6cca7a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Numeric",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed"
                ]
              },
              "name": "auction_status"
            }
          },
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_auction (address, nft, wallet_for_bids, price_token, start_price, min_bid, max_bid, status,\n            created_at, finished_at, tx_lt)\n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n        on conflict (address) where tx_lt <= $11 do update\n        set nft = $2, wallet_for_bids = $3, price_token = $4, start_price = $5, min_bid = least(nft_auction.min_bid, $6),\n            max_bid = $7, status = $8, created_at = $9, finished_at = $10, tx_lt = $11\n        "
  },
  "af570fc549eabc04332364885166e4b07ed6541bd02d029d1f0fa1d3aa63aca2": {
    "describe": {
      "columns": [
        {
          "name": "collection",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select collection from nft\n        where nft.address = $1\n        "
  },
  "d1fadb9ec1b00670074d5915fd31be591751dfa0ef09f553603170012a7ceb40": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          },
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_direct_buy (address, nft, collection, price_token, price, buyer, finished_at, expired_at,\n            state, created, updated, tx_lt)    \n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)\n        on conflict (address) where tx_lt <= $12 do update\n        set collection = $3, price = $5, finished_at = $7, expired_at = $8, state = $9, created = $10, updated = $11,\n            tx_lt = $12\n        "
  },
  "dd3744fad49c559fff0d921b279127301f6a71b4c332bdd51a148e6b000e8727": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Varchar",
          "Varchar",
          "Varchar"
        ]
      }
    },
    "query": "\n        update nft_price_history as nph\n        set price_token = coalesce(nph.price_token, $2), nft = coalesce(nph.nft, $3), \n            collection = coalesce(nph.collection, $4)\n        where source = $1\n        "
  },
  "ed5271faa0edea5031ec0f7204eabc4cad00034df488e6fec8fbc04a5d94081e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          }
        ]
      }
    },
    "query": "\n        insert into events_whitelist (address)\n        values ($1)\n        "
  },
  "f9ccc5ee112f62ca82b8523423dffea30e35105a7219c401028fd407037f9a2e": {
    "describe": {
      "columns": [
        {
          "name": "address!: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "nft?: Address",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "wallet_for_bids?: Address",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "price_token?: Address",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "start_price?",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "min_bid?",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "max_bid?",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "status?: AuctionStatus",
          "ordinal": 7,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "created_at?",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "finished_at?",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 10,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select address as \"address!: Address\", nft as \"nft?: Address\", wallet_for_bids as \"wallet_for_bids?: Address\",\n            price_token as \"price_token?: Address\", start_price as \"start_price?\", min_bid as \"min_bid?\", \n            max_bid as \"max_bid?\", status as \"status?: AuctionStatus\", created_at as \"created_at?\", \n            finished_at as \"finished_at?\", tx_lt as \"tx_lt!\"\n        from nft_auction where address = $1\n        "
  },
  "fdf3b1e4235886fe1fd288cd7c99b427a3714245d8a877d0d87663935d72f05d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Jsonb",
          "Timestamp"
        ]
      }
    },
    "query": "\n        insert into nft_metadata (nft, meta, updated)\n        values ($1, $2, $3)\n        on conflict (nft) where updated < $3 do update\n        set meta = $2, updated = $3\n        "
  },
  "fe52b8cd41a93cbab36eb5466e1422c28d74bb62ad25a187a13baca47e5d5a80": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select count(*) from (\n            select distinct owner from nft\n            where collection = $1\n        ) as owners\n        "
  }
}