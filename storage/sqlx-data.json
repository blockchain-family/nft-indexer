{
  "db": "PostgreSQL",
  "0c58155ac3deb1f1bae5ba7a4516d114f8c112d470094b74149fdb8c1c21f7e6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          }
        ]
      }
    },
    "query": "\n        update nft_direct_sell set state = $1\n        where expired_at != $2 and expired_at < $3 and nft_direct_sell.state = $4\n        "
  },
  "1d6d71b88118bde0d59239a95f8b7fbf4600da3ed10cee43bff1d139a5ef1ff4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          },
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_direct_sell (address, nft, collection, price_token, price, sell_price_usd, seller, finished_at,\n            expired_at, state, created, updated, tx_lt)\n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13)\n        on conflict (address) where tx_lt <= $13 do update\n        set collection = $3, price = $5, sell_price_usd = coalesce($6, nft_direct_sell.sell_price_usd),\n            finished_at = $8, expired_at = $9, state = $10, created = $11, updated = $12, tx_lt = $13\n        "
  },
  "3207a2889c18ed1e8beff310d183eea5de42f6199c27b1e236ec380a4ba064ab": {
    "describe": {
      "columns": [
        {
          "name": "price_token?: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select price_token as \"price_token?: Address\" from nft_auction\n        where address = $1\n        "
  },
  "3bb05dc18b8bfcdece5658a62266b0e951e647de7b8d5183c0cdaef2992f0881": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          }
        ]
      }
    },
    "query": "\n        update nft_direct_buy set state = $1\n        where expired_at != $2 and expired_at < $3 and nft_direct_buy.state = $4\n        "
  },
  "44f3635fb703fcb859bcc33c1055a4d23c49113c1c690ac1aff687f252881da9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int4",
          "Text"
        ]
      }
    },
    "query": "\n        update nft_collection\n        set fee_numerator = $1, fee_denominator = $2\n        where address = $3\n        "
  },
  "4547659557f1abe087e9ab1b7a34d2eb4bb477b4ca734619e22f4e75698a6104": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Numeric",
          "Bool",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_auction_bid (auction, buyer, price, next_bid_value, declined, created_at, tx_lt)\n        values ($1, $2, $3, $4, $5, $6, $7)\n        "
  },
  "6c10a5a32f49012764b2bd52fd3698dcc9db0266740953ae0fecdcea3c63812a": {
    "describe": {
      "columns": [
        {
          "name": "address!: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection?: Address",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "owner?: Address",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "manager?: Address",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "name?",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "description?",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "burned!",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "updated!",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "owner_update_lt!",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "manager_update_lt!",
          "ordinal": 9,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select address as \"address!: Address\", collection as \"collection?: Address\", owner as \"owner?: Address\", \n            manager as \"manager?: Address\", name as \"name?\", description as \"description?\", burned as \"burned!\", \n            updated as \"updated!\", owner_update_lt as \"owner_update_lt!\", manager_update_lt as \"manager_update_lt!\"\n        from nft where address = $1\n        "
  },
  "6fe319264ecda6c8d2f2dfb2c9c545e44feacdd06d9c966a25681ea62c4cbbb3": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select address from nft where collection = $1\n        "
  },
  "74cde259acad5d78d6ec5e83afcabc1080bc7e418cfe47f92f4ec4402857ce66": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auctionBid",
                  "directBuy",
                  "directSell"
                ]
              },
              "name": "nft_price_source"
            }
          },
          "Timestamp",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          }
        ]
      }
    },
    "query": "\n        insert into nft_price_history (source, source_type, ts, price, price_token, nft, collection)\n        values ($1, $2, $3, $4, $5, $6, $7)\n        "
  },
  "858d7c5eb1da83dfcd37cb46be06a826be6a873d514a804ad97e4d542196eb23": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          },
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_direct_buy (address, nft, collection, price_token, price, buy_price_usd, buyer, finished_at,\n            expired_at, state, created, updated, tx_lt)    \n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13)\n        on conflict (address) where tx_lt <= $13 do update\n        set collection = $3, price = $5, buy_price_usd = coalesce($6, nft_direct_buy.buy_price_usd), finished_at = $8,\n            expired_at = $9, state = $10, created = $11, updated = $12, tx_lt = $13\n        "
  },
  "8ecdb525bc647d2cee353ceae65cc873c93b531296da06233d2f779d9b3c091c": {
    "describe": {
      "columns": [
        {
          "name": "nft?: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection?: Address",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select nft.address as \"nft?: Address\", collection as \"collection?: Address\" from nft\n        inner join nft_auction\n        on nft_auction.nft = nft.address\n        where nft_auction.address = $1\n        "
  },
  "965401cd18387f2be3588882815ccced1fc69944139a120d23573be977608e53": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "SELECT count(1) FROM nft_collection WHERE address = $1"
  },
  "a2d8d0a1ecf451e456031ebe16b13914253a7af85ad73639b848a0e61d46ddeb": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Jsonb",
          "Varchar",
          "Jsonb"
        ]
      }
    },
    "query": "\n            insert into nft_attributes (nft, collection, raw, trait_type, value)\n            values ($1, $2, $3, $4, $5)\n            "
  },
  "b4684896963b00890592ed4979819d2b4a367ab59a679ea3bc8bfc7b697a0cc3": {
    "describe": {
      "columns": [
        {
          "name": "owners",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select count(distinct owner) as owners\n        from nft\n        where collection = $1\n        "
  },
  "b808a83b7b32970f4a83cf042616ecefb4db0522b0e9d568444996918ae92943": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n        update nft_collection\n        set owners_count = $2\n        where address = $1\n        "
  },
  "b8b13f963528d468d88805d4a9a259453d2718690be834c989fffc3f07bf9ff4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auction",
                  "direct_buy",
                  "direct_sell",
                  "nft",
                  "collection"
                ]
              },
              "name": "event_category"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auction_deployed",
                  "auction_created",
                  "auction_root_ownership_transferred",
                  "auction_active",
                  "auction_declined",
                  "auction_bid_placed",
                  "auction_bid_declined",
                  "auction_cancelled",
                  "auction_complete",
                  "direct_buy_deployed",
                  "direct_buy_declined",
                  "factory_direct_buy_ownership_transferred",
                  "direct_buy_state_changed",
                  "direct_sell_deployed",
                  "direct_sell_declined",
                  "factory_direct_sell_ownership_transferred",
                  "direct_sell_state_changed",
                  "nft_owner_changed",
                  "nft_manager_changed",
                  "collection_ownership_transferred",
                  "nft_created",
                  "nft_burned",
                  "market_fee_default_changed",
                  "market_fee_changed",
                  "add_collection_rules",
                  "remove_collection_rules"
                ]
              },
              "name": "event_type"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Int8",
          "Int8",
          "Jsonb",
          "Text"
        ]
      }
    },
    "query": "\n        insert into nft_events (event_cat, event_type, address, nft, collection, created_lt, created_at, args, message_hash)\n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n        on conflict (message_hash) do nothing\n        "
  },
  "c4639ac3418e39fd745be34929ffdb79e266d90ed2ccafc1d7e3c8a5071efd43": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Text",
          "Text",
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_uri"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_uri"
            }
          },
          "Numeric",
          "Numeric",
          "Int4",
          "Timestamp"
        ]
      }
    },
    "query": "\n        insert into nft_collection (address, owner, name, description, created, updated, logo, wallpaper,\n            total_price, max_price, owners_count, first_mint)\n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)\n        on conflict (address) do update\n        set owner = $2, name = coalesce($3, nft_collection.name), \n            description = coalesce($4, nft_collection.description), \n            created = case when nft_collection.created < $5 then nft_collection.created else $5 end, updated = $6,\n            logo = coalesce($7, nft_collection.logo), wallpaper = coalesce($8, nft_collection.wallpaper), total_price = $9,\n            max_price = $10, owners_count = $11, first_mint = least($12, nft_collection.first_mint)\n        "
  },
  "c63939d84e920c4f6e255d17607d7e20aa7f98550527bf5d98378ded7624d405": {
    "describe": {
      "columns": [
        {
          "name": "collection?: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select collection as \"collection?: Address\" from nft\n        where nft.address = $1\n        "
  },
  "cf091cf058b90c06d15d84a24f7707c8f4b4928013648d2b05e7895abc80d07e": {
    "describe": {
      "columns": [
        {
          "name": "price!: BigDecimal",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "price_token!: String",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select sum(ag.price)  as \"price!: BigDecimal\", ag.price_token as \"price_token!: String\" from (\n                            select price, price_token\n                            from nft\n                                     inner join nft_direct_sell as direct_sell\n                                                on nft.address = direct_sell.nft\n                            where nft.collection = $1\n                              and direct_sell.state = 'active'\n                            union\n                            select price as \"price!: BigDecimal\", price_token as \"price_token!: String\"\n                            from nft\n                                     inner join nft_auction as auction\n                                                on nft.address = auction.nft\n                                     inner join nft_auction_bid as bid\n                                                on auction.address = bid.auction\n                            where nft.collection = $1\n                              and auction.status = 'active'\n                        ) ag\n        group by ag.price_token\n        "
  },
  "db9147b6e9cbefc50b732ac9e6f16852f9f8e89c774357b158aefd62a0683031": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Varchar",
          "Text",
          "Bool",
          "Timestamp",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft (address, collection, owner, manager, name, description, burned, updated, owner_update_lt,\n            manager_update_lt)\n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)\n        on conflict (address) do update\n        set collection = coalesce($2, nft.collection), owner = $3, manager = $4, name = coalesce($5, nft.name),\n            description = coalesce($6, nft.description), burned = nft.burned or $7, updated = $8, owner_update_lt = $9,\n            manager_update_lt = $10\n        "
  },
  "dd3744fad49c559fff0d921b279127301f6a71b4c332bdd51a148e6b000e8727": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Varchar",
          "Varchar",
          "Varchar"
        ]
      }
    },
    "query": "\n        update nft_price_history as nph\n        set price_token = coalesce(nph.price_token, $2), nft = coalesce(nph.nft, $3), \n            collection = coalesce(nph.collection, $4)\n        where source = $1\n        "
  },
  "e2fa951a32b15efd066dae996817eb4a11e27f72629dbef55dd204d3c81acb1f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        ]
      }
    },
    "query": "\n        update nft_auction set status = $1\n        where finished_at != $2 and finished_at < $3 and nft_auction.status = $4\n        "
  },
  "eac454bf515a25939e5c1441a87433528bda8a93ee5c4d185cc541d7232d2bb3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Numeric",
          "Numeric",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          },
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_auction (address, nft, wallet_for_bids, price_token, start_price, closing_price_usd, min_bid,\n            max_bid, status, created_at, finished_at, tx_lt)\n        values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)\n        on conflict (address) do update\n        set nft = $2, wallet_for_bids = $3, price_token = $4, start_price = $5, closing_price_usd = $6, min_bid = $7,\n            max_bid = $8, status = $9, created_at = $10, finished_at = $11, tx_lt = $12\n        "
  },
  "ebb8c967f2dbf4dda6b8de9f3bf0e74600fc50fa77c423cf1b47fb4fc9ca00b8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Text",
          "Timestamp",
          "Text"
        ]
      }
    },
    "query": "\n            update nft\n            set name = $1, description = $2, updated = $3\n            where address = $4\n        "
  },
  "ed5271faa0edea5031ec0f7204eabc4cad00034df488e6fec8fbc04a5d94081e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          }
        ]
      }
    },
    "query": "\n        insert into events_whitelist (address)\n        values ($1)\n        "
  },
  "f699134fe7d894bf64369bd3daacda950cfd08b328af8c3bc482dff074ddb74a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Text"
        ]
      }
    },
    "query": "\n            update nft\n            set owner = $1, manager = $2\n            where address = $3\n        "
  },
  "f7601e9547dc43977c81e035376905c5bd63236ed32350098a274ee93f513c49": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Jsonb",
          "Timestamp"
        ]
      }
    },
    "query": "\n        insert into nft_metadata (nft, meta, updated)\n        values ($1, $2, $3)\n        on conflict (nft) where updated < $3 do update\n        set meta = coalesce($2, nft_metadata.meta), updated = $3\n        "
  },
  "ff8c08cffde20cb62f7bccf368e9bbdd7dda5f400b04d7948814622364ee9321": {
    "describe": {
      "columns": [
        {
          "name": "address!: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "nft?: Address",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "wallet_for_bids?: Address",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "price_token?: Address",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "start_price?",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "closing_price_usd?",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "min_bid?",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "max_bid?",
          "ordinal": 7,
          "type_info": "Numeric"
        },
        {
          "name": "status?: AuctionStatus",
          "ordinal": 8,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "created_at?",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "finished_at?",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select address as \"address!: Address\", nft as \"nft?: Address\", wallet_for_bids as \"wallet_for_bids?: Address\",\n            price_token as \"price_token?: Address\", start_price as \"start_price?\", \n            closing_price_usd as \"closing_price_usd?\", min_bid as \"min_bid?\", max_bid as \"max_bid?\",\n            status as \"status?: AuctionStatus\", created_at as \"created_at?\", finished_at as \"finished_at?\",\n            tx_lt as \"tx_lt!\"\n        from nft_auction where address = $1\n        "
  }
}