{
  "db": "PostgreSQL",
  "0d9f51334ecb761149b405cdd8db8437a812ae4a1e45a339f01fcc1e56aa2ff5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "TimestampArray",
          "Int8Array",
          "Int8Array"
        ]
      }
    },
    "query": "\n            insert into nft (\n                address, \n                collection, \n                owner, \n                manager, \n                updated, \n                owner_update_lt, \n                manager_update_lt\n            )\n            select\n                unnest($1::varchar[]),\n                unnest($2::varchar[]), \n                unnest($3::varchar[]), \n                unnest($4::varchar[]), \n                unnest($5::timestamp[]),\n                unnest($6::bigint[]),\n                unnest($7::bigint[]) \n            on conflict(address) do nothing\n        "
  },
  "1068960c3648fcc7976b1db18efa700c069bb3e54ee1a50631221f3dbb51d9ec": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Text"
        ]
      }
    },
    "query": "\n                update nft\n                set name = $1\n                where address = $2\n            "
  },
  "18ebdcb5f9674c7b0a6bf99a5f42978a53dae62cd6aafed3f88c99f4d5c218f5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Numeric",
          "Text"
        ]
      }
    },
    "query": "\n                update nft_auction\n                set closing_price_usd = $1\n                where address = $2\n            "
  },
  "1a8faf43e1567afeb374cc2c1d077d508b2b6df8cc0c30e59255d70c3f9ed835": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n        select address\n        from nft_collection\n        order by updated desc\n        limit $1\n        "
  },
  "23dde169ba4c8c92dd329f563239e0d5cf62f4681814561c9b8da8da983e0800": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "NumericArray",
          "NumericArray",
          "Int8Array"
        ]
      }
    },
    "query": "\n        update nft_auction set\n            min_bid = data.min_bid,\n            max_bid = data.max_bid,\n            tx_lt = data.tx_lt\n        from\n        (\n            select \n                unnest($1::varchar[]) as address,\n                unnest($2::numeric[]) as min_bid,\n                unnest($3::numeric[]) as max_bid,\n                unnest($4::bigint[]) as tx_lt\n        ) as data\n        where nft_auction.address = data.address\n    "
  },
  "262b8e565d8529de490faf119fcbd9d8aa334be0e10fdb34e70e2ad9669fb684": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "TimestampArray",
          "TimestampArray",
          {
            "Custom": {
              "kind": {
                "Array": {
                  "Custom": {
                    "kind": {
                      "Enum": [
                        "create",
                        "await_nft",
                        "active",
                        "filled",
                        "cancelled",
                        "expired"
                      ]
                    },
                    "name": "direct_sell_state"
                  }
                }
              },
              "name": "_direct_sell_state"
            }
          },
          "TimestampArray",
          "TimestampArray",
          "Int8Array"
        ]
      }
    },
    "query": "\n            insert into nft_direct_sell(\n                address,\n                root,\n                nft, \n                price_token, \n                price, \n                seller,\n                finished_at,\n                expired_at,\n                state,\n                created,\n                updated,\n                tx_lt\n            )\n            select\n                unnest($1::varchar[]), \n                unnest($2::varchar[]),\n                unnest($3::varchar[]), \n                unnest($4::varchar[]), \n                unnest($5::numeric[]),\n                unnest($6::varchar[]),\n                unnest($7::timestamp[]),\n                unnest($8::timestamp[]),\n                unnest($9::direct_sell_state[]),\n                unnest($10::timestamp[]),\n                unnest($11::timestamp[]),\n                unnest($12::bigint[])\n            on conflict(address) do nothing\n        "
  },
  "26a933a554da5ddb6363466dab92a0f5fd54779903c2869a6370adb4983fd233": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "token_addr!",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "token_amount!",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "created_at!",
          "ordinal": 3,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n                select \n                    address as id,\n                    price_token as \"token_addr!\",\n                    min_bid as \"token_amount!\",\n                    created_at as \"created_at!\"\n                from nft_auction\n                where closing_price_usd is null\n                and created_at is not null\n                and min_bid is not null\n                and price_token is not null\n                and created_at <= $1\n                and created_at != $2 \n                and status = 'completed'\n                limit $3\n            "
  },
  "37537384dd68dc8ab73ee774879598512b52a0de8d161443da42b3376fc01b5b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "TimestampArray"
        ]
      }
    },
    "query": "\n            insert into nft_collection (\n                address, \n                first_mint, \n                created, \n                updated\n            )\n            select\n                unnest($1::varchar[]), \n                unnest($2::timestamp[]), \n                unnest($2::timestamp[]), \n                unnest($2::timestamp[]) \n            on conflict(address) do nothing\n        "
  },
  "478f1843f03dcf85d5af47228054f4a477adb5eecc1ff594626de0dd3182c6b4": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Numeric"
        ]
      }
    },
    "query": "\n                select c.address\n                from nft_collection c\n                left join meta_handled_addresses mha on mha.address = c.address\n                where \n                    (mha.address is null) or\n                    (extract(epoch from now()) - mha.updated_at > $2 and failed is true)\n                order by updated desc\n                limit $1\n                "
  },
  "5a254f39cdadfa8c4af29faaf92e64800cb9320c690bb4ac6407cd15592bd472": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Numeric",
          "Text"
        ]
      }
    },
    "query": "\n                update nft_direct_buy\n                set buy_price_usd = $1\n                where address = $2\n            "
  },
  "5e51b09eb38779001303cf4a7bd8e19970f8741eef32844e802cbed56ba5cd6d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "TimestampArray"
        ]
      }
    },
    "query": "\n        update nft_collection set\n            fee_numerator   = data.num, \n            fee_denominator = data.den,\n            updated         = greatest(data.ts, nft_collection.updated)\n        from\n        (\n            select \n                unnest($1::varchar[]) as address,\n                unnest($2::integer[]) as num,\n                unnest($3::integer[]) as den,\n                unnest($4::timestamp[]) as ts\n        ) as data\n        where nft_collection.address = data.address\n    "
  },
  "5eb953cc5914b99497a9c19fbd407d3ec9be42cda925a69794a6445f75b4c626": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          {
            "Custom": {
              "kind": {
                "Array": {
                  "Custom": {
                    "kind": {
                      "Enum": [
                        "create",
                        "await_tokens",
                        "active",
                        "filled",
                        "cancelled",
                        "expired"
                      ]
                    },
                    "name": "direct_buy_state"
                  }
                }
              },
              "name": "_direct_buy_state"
            }
          },
          "TimestampArray",
          "TimestampArray",
          "Int8Array",
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "TimestampArray",
          "TimestampArray"
        ]
      }
    },
    "query": "\n        update nft_direct_buy set\n            state = data.state,\n            nft = data.nft,\n            price_token = data.price_token,\n            price = data.price,\n            buyer = data.buyer,\n            expired_at = data.expired_at,\n            finished_at = data.finished_at,\n            created = data.created,\n            updated = data.updated,\n            tx_lt = data.tx_lt\n        from\n        (\n            select \n                unnest($1::varchar[]) as address,\n                unnest($2::direct_buy_state[]) as state,\n                unnest($3::timestamp[]) as finished_at,\n                unnest($4::timestamp[]) as updated,\n                unnest($5::bigint[]) as tx_lt,\n                unnest($6::varchar[]) as nft,\n                unnest($7::varchar[]) as price_token,\n                unnest($8::numeric[]) as price,\n                unnest($9::varchar[]) as buyer,\n                unnest($10::timestamp[]) as expired_at,\n                unnest($11::timestamp[]) as created\n        ) as data\n        where nft_direct_buy.address = data.address\n        "
  },
  "5f619b22c878e3bb0288ce9aa8ddae142b8d0d2e68580bbf4e3992d7bd8c6c07": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        ]
      }
    },
    "query": "\n        update nft_auction set\n            status = data.status\n        from\n        (\n            select \n                unnest($1::varchar[]) as address,\n                $2::auction_status as status\n        ) as data\n        where nft_auction.address = data.address\n    "
  },
  "6f0fa608f7d0b847580fae9efb25389e76c11f42489f5220447c4caa845430a5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                update nft\n                set name = $1,\n                    description = $2\n                where address = $3\n            "
  },
  "76b95cdb8126f0b0089379a8a1796d3478691de75276a723a6444516ce6dd423": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "TimestampArray",
          "TimestampArray",
          {
            "Custom": {
              "kind": {
                "Array": {
                  "Custom": {
                    "kind": {
                      "Enum": [
                        "create",
                        "await_tokens",
                        "active",
                        "filled",
                        "cancelled",
                        "expired"
                      ]
                    },
                    "name": "direct_buy_state"
                  }
                }
              },
              "name": "_direct_buy_state"
            }
          },
          "TimestampArray",
          "TimestampArray",
          "Int8Array"
        ]
      }
    },
    "query": "\n            insert into nft_direct_buy(\n                address,\n                root,\n                nft, \n                price_token, \n                price, \n                buyer,\n                finished_at,\n                expired_at,\n                state,\n                created,\n                updated,\n                tx_lt\n            )\n            select\n                unnest($1::varchar[]),\n                unnest($2::varchar[]),\n                unnest($3::varchar[]), \n                unnest($4::varchar[]), \n                unnest($5::numeric[]),\n                unnest($6::varchar[]),\n                unnest($7::timestamp[]),\n                unnest($8::timestamp[]),\n                unnest($9::direct_buy_state[]),\n                unnest($10::timestamp[]),\n                unnest($11::timestamp[]),\n                unnest($12::bigint[])\n            on conflict(address) do nothing\n        "
  },
  "774439e45ec6b7d5827c0d03f330ffb6af0f5c13dcd0fe53156a8a18215d922f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "token_addr",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "token_amount",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n                select \n                    address as id,\n                    price_token as token_addr,\n                    price as token_amount,\n                    created as created_at\n                from nft_direct_buy\n                where buy_price_usd is null\n                and created <= $1\n                and created != $2 \n                and state = 'filled'\n                limit $3\n            "
  },
  "7d4403637b37255b2c03f7f57458c91759aa006ae110b7dfebd499dd5ca41f4f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Numeric",
          "Text"
        ]
      }
    },
    "query": "\n                update nft_direct_sell\n                set sell_price_usd = $1\n                where address = $2\n            "
  },
  "861d9c3757649d8f7d18e08fcfb77d3bfd31f92639ba779d8f8d7fdcacdc9e03": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Array": {
                  "Custom": {
                    "kind": {
                      "Enum": [
                        "auction",
                        "direct_buy",
                        "direct_sell",
                        "nft",
                        "collection",
                        "common"
                      ]
                    },
                    "name": "event_category"
                  }
                }
              },
              "name": "_event_category"
            }
          },
          {
            "Custom": {
              "kind": {
                "Array": {
                  "Custom": {
                    "kind": {
                      "Enum": [
                        "auction_deployed",
                        "auction_created",
                        "auction_root_ownership_transferred",
                        "auction_active",
                        "auction_declined",
                        "auction_bid_placed",
                        "auction_bid_declined",
                        "auction_cancelled",
                        "auction_complete",
                        "direct_buy_deployed",
                        "direct_buy_declined",
                        "factory_direct_buy_ownership_transferred",
                        "direct_buy_state_changed",
                        "direct_sell_deployed",
                        "direct_sell_declined",
                        "factory_direct_sell_ownership_transferred",
                        "direct_sell_state_changed",
                        "nft_owner_changed",
                        "nft_manager_changed",
                        "collection_ownership_transferred",
                        "nft_created",
                        "nft_burned",
                        "market_fee_default_changed",
                        "market_fee_changed",
                        "add_collection_rules",
                        "remove_collection_rules",
                        "ownership_transferred"
                      ]
                    },
                    "name": "event_type"
                  }
                }
              },
              "name": "_event_type"
            }
          },
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "Int8Array",
          "Int8Array",
          "JsonbArray",
          "TextArray"
        ]
      }
    },
    "query": "\n            insert into nft_events (\n                event_cat,  \n                event_type, \n                address, \n                nft,\n                collection, \n                created_lt,\n                created_at, \n                args, \n                message_hash\n            )\n            select \n                unnest($1::event_category[]),\n                unnest($2::event_type[]), \n                unnest($3::varchar[]), \n                unnest($4::varchar[]), \n                unnest($5::varchar[]),\n                unnest($6::bigint[]), \n                unnest($7::bigint[]),\n                unnest($8::jsonb[]),\n                unnest($9::text[])\n            on conflict(message_hash) do nothing\n        "
  },
  "8a642dcdfc996e0f497d5f513de2c10b51dab1884214351ab467e9f09979e531": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Jsonb",
          "Timestamp"
        ]
      }
    },
    "query": "\n                insert into nft_metadata (nft, meta, updated)\n                values ($1, $2, $3)\n                on conflict (nft) where updated < $3 do update\n                set meta = coalesce($2, nft_metadata.meta), updated = $3\n            "
  },
  "8cac0bb103dd3db03a60cf0eaac7213dc4c63b8655d1dd07055bd6a8a9596e04": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          {
            "Custom": {
              "kind": {
                "Array": {
                  "Custom": {
                    "kind": {
                      "Enum": [
                        "auctionBid",
                        "directBuy",
                        "directSell"
                      ]
                    },
                    "name": "nft_price_source"
                  }
                }
              },
              "name": "_nft_price_source"
            }
          },
          "TimestampArray",
          "NumericArray",
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\n            insert into nft_price_history (\n                source, \n                source_type, \n                ts, \n                price,\n                price_token, \n                nft\n            )\n            select\n                unnest($1::varchar[]),\n                unnest($2::nft_price_source[]),\n                unnest($3::timestamp[]),\n                unnest($4::numeric[]),\n                unnest($5::varchar[]),\n                unnest($6::varchar[])\n        "
  },
  "9380c536948ef486727823804437fca6692c10b860e2ce91ecc17b4bb85112e0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "Int8Array",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        ]
      }
    },
    "query": "\n        insert into nft_auction (\n            address, \n            root,\n            nft,\n            tx_lt,\n            status\n        )\n        select \n            unnest($1::varchar[]),\n            unnest($2::varchar[]),\n            unnest($3::varchar[]),\n            unnest($4::bigint[]),\n            $5::auction_status\n        on conflict(address) do nothing\n        "
  },
  "9e785ebcd70336f018a5c52a32816eb3c26a5dc439344d691ef9cdcef0584381": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "TimestampArray"
        ]
      }
    },
    "query": "\n        update nft set\n            owner = data.owner,\n            updated = data.time\n        from\n        (\n            select \n                unnest($1::varchar[]) as address,\n                unnest($2::varchar[]) as owner,\n                unnest($3::timestamp[]) as time\n        ) as data\n        where nft.address = data.address\n    "
  },
  "a67d814a4385ec4491085a66462c167d4904413f5eff84e3e06ce094527cb552": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n            select address \n            from nft \n            where collection = $1\n            "
  },
  "a76e7676bc83e0d7ce7a25db1772552bd60eb7376fd761ed748dc622046d2748": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\n        update nft set\n            burned = true,\n            owner = data.owner,\n            manager = data.manager\n        from\n        (\n            select \n                unnest($1::varchar[]) as address,\n                unnest($2::varchar[]) as owner,\n                unnest($3::varchar[]) as manager\n        ) as data\n        where nft.address = data.address\n    "
  },
  "aaf93547db178572807ccc14aa43553f65b9509c3238b9412d5e68b404f91c7d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Jsonb",
          "Varchar",
          "Jsonb"
        ]
      }
    },
    "query": "\n                    insert into nft_attributes (nft, collection, raw, trait_type, value)\n                    values ($1, $2, $3, $4, $5)\n                "
  },
  "ac2aa6372528c6b605d90e6d1f9f56e22a6bd62c3f66770f45f3926ede759756": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Int8",
          "Bool"
        ]
      }
    },
    "query": "\n                insert into meta_handled_addresses (\n                    address, \n                    updated_at,\n                    failed\n                )\n                values (\n                    $1, \n                    $2,\n                    $3\n                )\n                on conflict (address) do update \n                set\n                    updated_at = $2,\n                    failed = $3\n            "
  },
  "ae19c988625abf5f56b681137b8ea3a0655f99ea4cd1eb82e17f30a61e6a7ded": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Text",
          "Text",
          "Varchar",
          "Varchar",
          "Timestamp"
        ]
      }
    },
    "query": "\n            update nft_collection\n            set \n                owner        = $2, \n                name         = coalesce($3, nft_collection.name),\n                description  = coalesce($4, nft_collection.description),\n                logo         = coalesce($5, nft_collection.logo),\n                wallpaper    = coalesce($6, nft_collection.wallpaper),\n                updated      = greatest($7, nft_collection.updated)\n            where address = $1\n            "
  },
  "b26379153f56804b980c102af4afc542ec8aeda91a7e11918c72a7690b4a67f5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "NumericArray",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        ]
      }
    },
    "query": "\n        update nft_auction set\n            max_bid = data.max_bid,\n            status = data.status\n        from\n        (\n            select \n                unnest($1::varchar[]) as address,\n                unnest($2::numeric[]) as max_bid,\n                $3::auction_status as status\n        ) as data\n        where nft_auction.address = data.address\n    "
  },
  "c2bf718d47d20ce18553667542c2940cf296da60279aa49ea1be875adb1ec6f5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "NumericArray",
          "TimestampArray",
          "Int8Array",
          "BoolArray"
        ]
      }
    },
    "query": "\n            insert into nft_auction_bid (\n                auction,\n                buyer,\n                price,\n                next_bid_value, \n                created_at,\n                tx_lt,\n                declined\n            )\n            select\n                unnest($1::varchar[]),\n                unnest($2::varchar[]),\n                unnest($3::numeric[]),\n                unnest($4::numeric[]),\n                unnest($5::timestamp[]),\n                unnest($6::bigint[]),\n                unnest($7::boolean[])\n        "
  },
  "d217cc75431bc07f6d73cc321622078a260f0d1d330a2b244f07f2802708e486": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                update nft\n                set description = $1\n                where address = $2\n            "
  },
  "e9cf83918980558755dd53fa617f8b745f8b35451b82bdaaf69f55260d4c5973": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\n            insert into deployed_offers (\n                address,\n                root\n            )\n            select\n                unnest($1::varchar[]),\n                unnest($2::varchar[])\n            on conflict (address) do nothing\n        "
  },
  "f105d57d64d074404767c4c9d677d892117426e5fb7e11d18c163ae5e2255ea0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          {
            "Custom": {
              "kind": {
                "Array": {
                  "Custom": {
                    "kind": {
                      "Enum": [
                        "create",
                        "await_nft",
                        "active",
                        "filled",
                        "cancelled",
                        "expired"
                      ]
                    },
                    "name": "direct_sell_state"
                  }
                }
              },
              "name": "_direct_sell_state"
            }
          },
          "TimestampArray",
          "TimestampArray",
          "Int8Array",
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "TimestampArray",
          "TimestampArray"
        ]
      }
    },
    "query": "\n        update nft_direct_sell set\n            state = data.state,\n            nft = data.nft,\n            price_token = data.price_token,\n            price = data.price,\n            seller = data.seller,\n            expired_at = data.expired_at,\n            finished_at = data.finished_at,\n            updated = data.updated,\n            created = data.created,\n            tx_lt = data.tx_lt\n        from\n        (\n            select \n                unnest($1::varchar[]) as address,\n                unnest($2::direct_sell_state[]) as state,\n                unnest($3::timestamp[]) as finished_at,\n                unnest($4::timestamp[]) as updated,\n                unnest($5::bigint[]) as tx_lt,\n                unnest($6::varchar[]) as nft,\n                unnest($7::varchar[]) as price_token,\n                unnest($8::numeric[]) as price,\n                unnest($9::varchar[]) as seller,\n                unnest($10::timestamp[]) as expired_at,\n                unnest($11::timestamp[]) as created\n        ) as data\n        where nft_direct_sell.address = data.address\n        "
  },
  "f5a9f5b3bf62ee2760e221f20d0e93d40bc09371f7260c4b441785e603da250a": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Numeric"
        ]
      }
    },
    "query": "\n                select \n                    n.address,\n                    n.collection\n                from nft n\n                left join meta_handled_addresses mha on mha.address = n.address\n                where \n                    (mha.address is null) or\n                    (extract(epoch from now()) - mha.updated_at > $2 and failed is true)\n                order by updated desc\n                limit $1\n            "
  },
  "f5d588a0d28c4e9446b5ca4d7ea99ec0ad88afb1d7f48e71be86457eb9f9329a": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "is_l2r",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "decimals",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "everscale",
                  "venom"
                ]
              },
              "name": "bc_name"
            }
          }
        ]
      }
    },
    "query": "\n                select \n                    pair as address,\n                    is_l2r,\n                    decimals\n                from token_to_dex\n                where token = $1 and source = $2\n            "
  },
  "f63a96a1f3309b0c0dc83bb09e7fce182923bcd583bf4ee627a3f304189aa7f8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "NumericArray",
          "TimestampArray",
          "TimestampArray",
          "Int8Array",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        ]
      }
    },
    "query": "\n        update nft_auction set\n            wallet_for_bids = data.wallet,\n            price_token = data.price_token,\n            start_price = data.start_price,\n            min_bid = data.min_bid,\n            created_at = data.created,\n            finished_at = data.finished,\n            tx_lt = data.tx_lt,\n            status = data.status\n        from (\n            select \n                unnest($1::varchar[]) as address,\n                unnest($2::varchar[]) as wallet,\n                unnest($3::varchar[]) as price_token,\n                unnest($4::numeric[]) as start_price,\n                unnest($5::numeric[]) as min_bid,\n                unnest($6::timestamp[]) as created, \n                unnest($7::timestamp[]) as finished,\n                unnest($8::bigint[]) as tx_lt,\n                $9::auction_status as status\n        ) as data\n        where nft_auction.address = data.address\n        "
  },
  "fc19916b9a9ca377455e1b9746fdfca4af4359ca9fb2a3029edfedcfb771ac67": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "token_addr",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "token_amount",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n                select \n                    address as id,\n                    price_token as token_addr,\n                    price as token_amount,\n                    created as created_at\n                from nft_direct_sell\n                where sell_price_usd is null\n                and created <= $1\n                and created != $2 \n                and state = 'filled'\n                limit $3\n            "
  },
  "fe6605371497cf9f59c6633361e1214b02d7eaa876274bdae69495cecaf96215": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "TimestampArray"
        ]
      }
    },
    "query": "\n        update nft set\n            manager = data.manager,\n            updated = data.time\n        from\n        (\n            select \n                unnest($1::varchar[]) as address,\n                unnest($2::varchar[]) as manager,\n                unnest($3::timestamp[]) as time\n        ) as data\n        where nft.address = data.address\n    "
  }
}