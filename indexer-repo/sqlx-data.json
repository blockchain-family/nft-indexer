{
  "db": "PostgreSQL",
  "1068960c3648fcc7976b1db18efa700c069bb3e54ee1a50631221f3dbb51d9ec": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Text"
        ]
      }
    },
    "query": "\n                update nft\n                set name = $1\n                where address = $2\n            "
  },
  "18ebdcb5f9674c7b0a6bf99a5f42978a53dae62cd6aafed3f88c99f4d5c218f5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Numeric",
          "Text"
        ]
      }
    },
    "query": "\n                update nft_auction\n                set closing_price_usd = $1\n                where address = $2\n            "
  },
  "26a933a554da5ddb6363466dab92a0f5fd54779903c2869a6370adb4983fd233": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "token_addr!",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "token_amount!",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "created_at!",
          "ordinal": 3,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n                select \n                    address as id,\n                    price_token as \"token_addr!\",\n                    min_bid as \"token_amount!\",\n                    created_at as \"created_at!\"\n                from nft_auction\n                where closing_price_usd is null\n                and created_at is not null\n                and min_bid is not null\n                and price_token is not null\n                and created_at <= $1\n                and created_at != $2 \n                and status = 'completed'\n                limit $3\n            "
  },
  "29880310b99a218f5203b6f22452cf99d225f34d4d03479e8fd6b4f569df9e84": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          }
        ]
      }
    },
    "query": "\n        insert into events_whitelist (address)\n        values ($1)\n        on conflict (address) do nothing\n        "
  },
  "2bbf7d6a7740e093595409521119e2e92dabc3cd603d3a338f4d5019af55bf42": {
    "describe": {
      "columns": [
        {
          "name": "owners",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select \n            count(distinct owner) as owners\n        from \n            nft\n        where \n            collection = $1\n        "
  },
  "5a254f39cdadfa8c4af29faaf92e64800cb9320c690bb4ac6407cd15592bd472": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Numeric",
          "Text"
        ]
      }
    },
    "query": "\n                update nft_direct_buy\n                set buy_price_usd = $1\n                where address = $2\n            "
  },
  "5aedf915b98ffd9840f09af6dc9b28aedbe83480f956a94b00a480d38a0ec4b3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auctionBid",
                  "directBuy",
                  "directSell"
                ]
              },
              "name": "nft_price_source"
            }
          },
          "Timestamp",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          }
        ]
      }
    },
    "query": "\n        insert into nft_price_history (\n            source, source_type, \n            ts, \n            price,  price_token, \n            nft,    collection\n        )\n        values (\n            $1,     $2, \n            $3, \n            $4,     $5, \n            $6,     $7\n        )\n        "
  },
  "5f9ad4bf41fdf0178a8cbd705742f6c3c4740a467026641bff782038daa5e74d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Jsonb",
          "Varchar",
          "Jsonb"
        ]
      }
    },
    "query": "\n            insert into nft_attributes (\n                nft,        collection, \n                raw, \n                trait_type, \n                value\n            )\n            values (\n                $1,         $2, \n                $3, \n                $4, \n                $5\n            )\n            "
  },
  "6f0fa608f7d0b847580fae9efb25389e76c11f42489f5220447c4caa845430a5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                update nft\n                set name = $1,\n                    description = $2\n                where address = $3\n            "
  },
  "745efcc2bdecacdf2a199bfc7fba212caa12fc81e653888971799d25d06f41ca": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auction",
                  "direct_buy",
                  "direct_sell",
                  "nft",
                  "collection",
                  "common"
                ]
              },
              "name": "event_category"
            }
          },
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auction_deployed",
                  "auction_created",
                  "auction_root_ownership_transferred",
                  "auction_active",
                  "auction_declined",
                  "auction_bid_placed",
                  "auction_bid_declined",
                  "auction_cancelled",
                  "auction_complete",
                  "direct_buy_deployed",
                  "direct_buy_declined",
                  "factory_direct_buy_ownership_transferred",
                  "direct_buy_state_changed",
                  "direct_sell_deployed",
                  "direct_sell_declined",
                  "factory_direct_sell_ownership_transferred",
                  "direct_sell_state_changed",
                  "nft_owner_changed",
                  "nft_manager_changed",
                  "collection_ownership_transferred",
                  "nft_created",
                  "nft_burned",
                  "market_fee_default_changed",
                  "market_fee_changed",
                  "add_collection_rules",
                  "remove_collection_rules",
                  "ownership_transferred"
                ]
              },
              "name": "event_type"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Int8",
          "Int8",
          "Jsonb",
          "Text"
        ]
      }
    },
    "query": "\n        insert into nft_events (\n            event_cat,  event_type, \n            address, \n            nft,        collection, \n            created_lt, created_at, \n            args, \n            message_hash\n        )\n        values (\n            $1,         $2, \n            $3, \n            $4,         $5, \n            $6,         $7, \n            $8, \n            $9\n        )\n        on conflict (message_hash) do nothing\n        "
  },
  "774439e45ec6b7d5827c0d03f330ffb6af0f5c13dcd0fe53156a8a18215d922f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "token_addr",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "token_amount",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n                select \n                    address as id,\n                    price_token as token_addr,\n                    price as token_amount,\n                    created as created_at\n                from nft_direct_buy\n                where buy_price_usd is null\n                and created <= $1\n                and created != $2 \n                and state = 'filled'\n                limit $3\n            "
  },
  "7d4403637b37255b2c03f7f57458c91759aa006ae110b7dfebd499dd5ca41f4f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Numeric",
          "Text"
        ]
      }
    },
    "query": "\n                update nft_direct_sell\n                set sell_price_usd = $1\n                where address = $2\n            "
  },
  "7f2f107b7fe45a4ec608bd972c3585aa8b2d7f268723a90b7858eea455db44ef": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int4",
          "Text"
        ]
      }
    },
    "query": "\n        update nft_collection\n        set \n            fee_numerator   = $1, \n            fee_denominator = $2\n        where address = $3\n        "
  },
  "8a642dcdfc996e0f497d5f513de2c10b51dab1884214351ab467e9f09979e531": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Jsonb",
          "Timestamp"
        ]
      }
    },
    "query": "\n                insert into nft_metadata (nft, meta, updated)\n                values ($1, $2, $3)\n                on conflict (nft) where updated < $3 do update\n                set meta = coalesce($2, nft_metadata.meta), updated = $3\n            "
  },
  "903ec8f0cc3aa3e19021c24ba99948edff6624c2f198d51345d57482597c49cc": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          }
        ]
      }
    },
    "query": "\n        update nft_direct_buy \n        set state = $1\n        where expired_at != $2 and expired_at < $3 and nft_direct_buy.state = $4\n        "
  },
  "91e5adafe8b6e0c076098a6649ed48c7d92ed16bd44d91868b5481f37e5b5b2e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Text",
          "Text",
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_uri"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_uri"
            }
          },
          "Numeric",
          "Numeric",
          "Int4",
          "Timestamp"
        ]
      }
    },
    "query": "\n        insert into nft_collection (\n            address, \n            owner, \n            name,         description, \n            created,      updated, \n            logo,         wallpaper,\n            total_price,  max_price, \n            owners_count, \n            first_mint\n        )\n        values (\n            $1, \n            $2, \n            $3,           $4, \n            $5,           $6, \n            $7,           $8, \n            $9,           $10, \n            $11, \n            $12\n        )\n        on conflict (address) do update\n        set \n            owner        = $2, \n            name         = coalesce($3, nft_collection.name),\n            description  = coalesce($4, nft_collection.description), \n            created      = case when nft_collection.created < $5 then nft_collection.created else $5 end, \n            updated      = $6,\n            logo         = coalesce($7, nft_collection.logo),\n            wallpaper    = coalesce($8, nft_collection.wallpaper), \n            total_price  = $9,\n            max_price    = $10, \n            owners_count = $11, \n            first_mint   = least($12, nft_collection.first_mint)\n        "
  },
  "928e08c55700f8e2d52cb00f8c60ebb7c6b82738e7710089f196d5f4ec33b316": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Jsonb",
          "Timestamp"
        ]
      }
    },
    "query": "\n        insert into nft_metadata (\n            nft, \n            meta, \n            updated\n        )\n        values (\n            $1, \n            $2, \n            $3\n        )\n        on conflict (nft) where updated < $3 do update\n        set \n            meta    = coalesce($2, nft_metadata.meta), \n            updated = $3\n        "
  },
  "979b256cf628449f0b0eea47d0ab101b3cc2bbcbccfc29a4417db320f7452b53": {
    "describe": {
      "columns": [
        {
          "name": "collection?: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select collection as \"collection?: Address\" \n        from nft\n        where nft.address = $1\n        "
  },
  "9b323e3f1cae3cb24db18b55518d7516c9d9f3b64dbc789606136ee2a6acd584": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Varchar",
          "Text",
          "Bool",
          "Timestamp",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft (\n            address, \n            collection, \n            owner,           manager, \n            name,            description, \n            burned, \n            updated, \n            owner_update_lt, manager_update_lt\n        )\n        values (\n            $1, \n            $2, \n            $3,             $4, \n            $5,             $6, \n            $7, \n            $8, \n            $9,             $10)\n        on conflict (address) do update\n        set \n            collection        = coalesce($2, nft.collection), \n            owner             = case when \n                                         (nft.owner is null) or ((nft.owner_update_lt <= $9) and ($3 is not null))\n                                     then \n                                         $3\n                                     else \n                                         nft.owner \n                                     end,\n                manager       = case when \n                                         (nft.manager is null) or ((nft.manager_update_lt <= $10) and ($4 is not null))\n                                     then \n                                         $4\n                                     else \n                                         nft.owner \n                                     end, \n            name              = coalesce($5, nft.name),\n            description       = coalesce($6, nft.description), \n            burned            = nft.burned or $7, \n            updated           = $8, \n            owner_update_lt   = case when \n                                         (nft.owner is null) or ((nft.owner_update_lt <= $9) and ($3 is not null))\n                                     then \n                                         $9\n                                     else \n                                         nft.owner_update_lt \n                                     end,\n            manager_update_lt = case when \n                                         (nft.manager is null) or ((nft.manager_update_lt <= $10) and ($4 is not null))\n                                     then \n                                         $10\n                                     else \n                                         nft.manager_update_lt \n                                     end\n        "
  },
  "9cf1d19b8d8d53d210db49252fa3ce394ad3e6264ac88e0d0f446083ecc4633c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Text",
          "Timestamp",
          "Text"
        ]
      }
    },
    "query": "\n            update nft\n            set \n                name        = $1, \n                description = $2, \n                updated     = $3\n            where address = $4\n        "
  },
  "9e7439ea66e61794826899d4f6d48731ad76a91bd7025a9c790a051361976028": {
    "describe": {
      "columns": [
        {
          "name": "nft?: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection?: Address",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select \n            nft.address as \"nft?: Address\", \n            collection as \"collection?: Address\" \n        from nft\n        inner join nft_auction\n        on nft_auction.nft = nft.address\n        where nft_auction.address = $1\n        "
  },
  "a40d50e5bf1536d2dfa32d508381e7deca1564fd4b1703dff1de48526cb581c9": {
    "describe": {
      "columns": [
        {
          "name": "price_token?: Address",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select price_token as \"price_token?: Address\" \n        from nft_auction\n        where address = $1\n        "
  },
  "aaf93547db178572807ccc14aa43553f65b9509c3238b9412d5e68b404f91c7d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Jsonb",
          "Varchar",
          "Jsonb"
        ]
      }
    },
    "query": "\n                    insert into nft_attributes (nft, collection, raw, trait_type, value)\n                    values ($1, $2, $3, $4, $5)\n                "
  },
  "b4d4a99bcd2e853f6e643f4de18b21ae1777a79baf4b0271ab4afe2e27e2171f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          }
        ]
      }
    },
    "query": "\n                insert into handled_nft (address)\n                values ($1)\n                on conflict do nothing\n            "
  },
  "b808a83b7b32970f4a83cf042616ecefb4db0522b0e9d568444996918ae92943": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n        update nft_collection\n        set owners_count = $2\n        where address = $1\n        "
  },
  "bd856fa39f710dae4f8a555109bbec99357ae8681b9307e390857ca434191d34": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select address \n        from nft \n        where collection = $1 and name is null\n        "
  },
  "c97eba3e4827a6e1933af0372625fa35fd350dfef4ea9550157d57b69c23cb94": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          },
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_direct_sell (\n            address, \n            nft,         collection, \n            price_token, price,      sell_price_usd, \n            seller, \n            finished_at, expired_at, \n            state, \n            created,     updated, \n            tx_lt\n        )\n        values (\n            $1, \n            $2,          $3, \n            $4,          $5,         $6, \n            $7, \n            $8,          $9, \n            $10, \n            $11,         $12, \n            $13\n        )\n        on conflict (address) where tx_lt <= $13 do update\n        set \n            collection     = $3, \n            price          = $5, \n            sell_price_usd = coalesce($6, nft_direct_sell.sell_price_usd),\n            finished_at    = $8, \n            expired_at     = $9, \n            state          = $10, \n            created        = $11, \n            updated        = $12, \n            tx_lt          = $13\n        "
  },
  "c9e471d449b436f81270357630cc0a316ddb275ed92bc87ae3a7ae517fce9d22": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Numeric",
          "Numeric",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          },
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_auction (\n            address, \n            nft, \n            wallet_for_bids, \n            price_token,     start_price, closing_price_usd, \n            min_bid,         max_bid, \n            status, \n            created_at,      finished_at, \n            tx_lt\n        )\n        values (\n            $1, \n            $2, \n            $3, \n            $4,              $5,          $6, \n            $7,              $8, \n            $9, \n            $10,             $11, \n            $12\n        )\n        on conflict (address) do update\n        set \n            nft = coalesce($2, nft_auction.nft), \n            wallet_for_bids   = coalesce($3, nft_auction.wallet_for_bids), \n            price_token       = coalesce($4, nft_auction.price_token), \n            start_price       = coalesce($5, nft_auction.start_price), \n            closing_price_usd = coalesce($6, nft_auction.closing_price_usd),\n            min_bid           = case when \n                                    (nft_auction.min_bid is null) or ((nft_auction.tx_lt <= $12) and ($7 is not null))\n                                then \n                                    $7\n                                else \n                                    nft_auction.min_bid \n                                end,\n            max_bid           = case when \n                                    (nft_auction.max_bid is null) or ((nft_auction.tx_lt <= $12) and ($8 is not null))\n                                then \n                                    $8\n                                else \n                                    nft_auction.max_bid \n                                end, \n            status            = case when \n                                    (nft_auction.status is null) or ((nft_auction.tx_lt <= $12) and ($9 is not null))\n                                then \n                                    $9\n                                else \n                                    nft_auction.status \n                                end,\n            created_at        = coalesce($10, nft_auction.created_at), \n            finished_at       = coalesce($11, nft_auction.finished_at), \n            tx_lt             = greatest($12, nft_auction.tx_lt)\n        "
  },
  "cf091cf058b90c06d15d84a24f7707c8f4b4928013648d2b05e7895abc80d07e": {
    "describe": {
      "columns": [
        {
          "name": "price!: BigDecimal",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "price_token!: String",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        select sum(ag.price)  as \"price!: BigDecimal\", ag.price_token as \"price_token!: String\" from (\n                            select price, price_token\n                            from nft\n                                     inner join nft_direct_sell as direct_sell\n                                                on nft.address = direct_sell.nft\n                            where nft.collection = $1\n                              and direct_sell.state = 'active'\n                            union\n                            select price as \"price!: BigDecimal\", price_token as \"price_token!: String\"\n                            from nft\n                                     inner join nft_auction as auction\n                                                on nft.address = auction.nft\n                                     inner join nft_auction_bid as bid\n                                                on auction.address = bid.auction\n                            where nft.collection = $1\n                              and auction.status = 'active'\n                        ) ag\n        group by ag.price_token\n        "
  },
  "cf51d1816c2fc51789d4a5fe1fcf97e0d3cfa21278687c4fd9b4dc5cdabfae76": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Text"
        ]
      }
    },
    "query": "\n            update nft\n            set \n                owner = $1, \n                manager = $2\n            where address = $3\n        "
  },
  "d217cc75431bc07f6d73cc321622078a260f0d1d330a2b244f07f2802708e486": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                update nft\n                set description = $1\n                where address = $2\n            "
  },
  "d7c41aa5b5a713ec12741e95640220f7f7da2d3a50a0b996ea59bd0aafb0c528": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            select \n                n.address,\n                n.collection\n            from nft n\n            left join handled_nft hn on hn.address = n.address\n            where hn.address is null\n            limit $1\n        "
  },
  "e84a7fe746418e01bca2bc5557dafaf9d6066bf126651f291def4947b85232d6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          }
        ]
      }
    },
    "query": "\n        update nft_direct_sell \n        set state = $1\n        where expired_at != $2 and expired_at < $3 and nft_direct_sell.state = $4\n        "
  },
  "eb3fb4f74c5510e4d03ebb1781a51f1a23020432e2fa49c6a478972a663a0307": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Varchar",
          "Varchar",
          "Varchar"
        ]
      }
    },
    "query": "\n        update \n            nft_price_history as nph\n        set \n            price_token = coalesce(nph.price_token, $2), \n            nft         = coalesce(nph.nft, $3), \n            collection  = coalesce(nph.collection, $4)\n        where source = $1\n        "
  },
  "ef7fce702e8ab060c2e4f23644e01de2fcad6a08f3e55bb3b0a602b87282f479": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        ]
      }
    },
    "query": "\n        update nft_auction \n        set status = $1\n        where finished_at != $2 and finished_at < $3 and nft_auction.status = $4\n        "
  },
  "f27fbc98ac5975edd1f4ac4af37cfd07de37e5c52186bb43e17c25f65a589a59": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Numeric",
          "Bool",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_auction_bid (\n            auction,\n            buyer,\n            price,      next_bid_value, \n            declined, \n            created_at,\n            tx_lt\n        )\n        values (\n            $1, \n            $2, \n            $3,         $4, \n            $5, \n            $6, \n            $7\n        )\n        "
  },
  "f5d588a0d28c4e9446b5ca4d7ea99ec0ad88afb1d7f48e71be86457eb9f9329a": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "is_l2r",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "decimals",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "everscale",
                  "venom"
                ]
              },
              "name": "bc_name"
            }
          }
        ]
      }
    },
    "query": "\n                select \n                    pair as address,\n                    is_l2r,\n                    decimals\n                from token_to_dex\n                where token = $1 and source = $2\n            "
  },
  "f633f834d6e9169fc7f3d5a08542433663da6df732b7c45f7c5a52335ffdf378": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Numeric",
          "Numeric",
          {
            "Custom": {
              "kind": {
                "Domain": "Varchar"
              },
              "name": "t_address"
            }
          },
          "Timestamp",
          "Timestamp",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          },
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n        insert into nft_direct_buy (\n            address, \n            nft,         collection, \n            price_token, price,      buy_price_usd, \n            buyer, \n            finished_at, expired_at, \n            state, \n            created,     updated, \n            tx_lt\n        )    \n        values (\n            $1, \n            $2,          $3, \n            $4,          $5,         $6, \n            $7, \n            $8,          $9, \n            $10, \n            $11,         $12, \n            $13\n        )\n        on conflict (address) where tx_lt <= $13 do update\n        set \n            collection    = $3, \n            price         = $5, \n            buy_price_usd = coalesce($6, nft_direct_buy.buy_price_usd), \n            finished_at   = $8,\n            expired_at    = $9, \n            state         = $10, \n            created       = $11, \n            updated       = $12, \n            tx_lt         = $13\n        "
  },
  "fc19916b9a9ca377455e1b9746fdfca4af4359ca9fb2a3029edfedcfb771ac67": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "token_addr",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "token_amount",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n                select \n                    address as id,\n                    price_token as token_addr,\n                    price as token_amount,\n                    created as created_at\n                from nft_direct_sell\n                where sell_price_usd is null\n                and created <= $1\n                and created != $2 \n                and state = 'filled'\n                limit $3\n            "
  }
}