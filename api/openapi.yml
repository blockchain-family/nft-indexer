openapi: "3.0.3"
info:
  title: nft indexer api
  version: "0.1"
components:
  schemas:
    address:
      type: string
      minLength: 63
      maxLength: 64
      description: contract address

    ts:
      type: integer
      format: int32
      description: unix timestamp

    price:
      type: object
      properties:
        priceToken:
          $ref: '#/components/schemas/address'
        price:
          type: integer
          format: int64
        usdPrice:
          type: number
          format: float64
      required:
        - price
        - priceToken

    nftPrice:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/address'
        ts:
          $ref: '#/components/schemas/ts'
      required:
        - price
        - ts

    auctionBid:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/address'
        auction:
          $ref: '#/components/schemas/address'
        nft:
          $ref: '#/components/schemas/address'
        price:
          type: integer
          format: int64
        createdAt:
          $ref: '#/components/schemas/ts'
        active:
          type: boolean
      required:
        - from
        - auction
        - nft
        - price
        - createdAt

    offer:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/address'
        nft:
          $ref: '#/components/schemas/address'
        price:
          $ref: '#/components/schemas/price'
        createdAt:
          $ref: '#/components/schemas/ts'
        expiredAt:
          $ref: '#/components/schemas/ts'
        finishedAt:
          $ref: '#/components/schemas/ts'
      required:
        - from
        - nft
        - price
        - createdAt

    forSale:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/address'
        nft:
          $ref: '#/components/schemas/address'
        price:
          $ref: '#/components/schemas/price'
        createdAt:
          $ref: '#/components/schemas/ts'
        finishedAt:
          $ref: '#/components/schemas/ts'
      required:
        - from
        - nft
        - price
        - createdAt

    auction:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/address'
        nft:
          $ref: '#/components/schemas/address'
        bidToken:
          $ref: '#/components/schemas/address'
        startBid:
          type: integer
          format: int64
        maxBid:
          type: integer
          format: int64
        startTime:
          $ref: '#/components/schemas/ts'
        finishTime:
          $ref: '#/components/schemas/ts'
      required:
        - address
        - nft
        - bidToken
  
    contract:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/address'
        name:
          type: string
        description:
          type: string
        owner:
          $ref: '#/components/schemas/address'
      required:
        - address
        - name

    nft:
      allOf:
      - $ref: '#/components/schemas/contract'
      - type: object
        properties:
          image:
            type: string
            format: uri
          collection:
            $ref: '#/components/schemas/contract'
          attributes:
            type: array
            items:
              type: object
          currentPrice:
            $ref: '#/components/schemas/price'
          lastPrice:
            $ref: '#/components/schemas/price'
          auction:
            $ref: '#/components/schemas/address'
          forsale:
            $ref: '#/components/schemas/address'
          manager:
            $ref: '#/components/schemas/address'    
        required:
          - image
          - owner
          - collection
          - traits

    collection:
      allOf:
      - $ref: '#/components/schemas/contract'
      - type: object
        properties:
          verified:
            type: boolean
          createdAt:
            $ref: '#/components/schemas/ts'        
          wallpaper:
            type: string
            format: uri
          logo:
            type: string
            format: uri
          lowestPrice:
            $ref: '#/components/schemas/price'
          totalPrice:
            $ref: '#/components/schemas/price'
          ownersCount:
            type: integer
            format: int32
        required:
          - ownersCount
          - createdAt

    eventType:
      type: string
      enum:
      - auction_deployed
      - auction_created
      - auction_ownership_transferred
      - auction_active
      - auction_declined
      - auction_bid_placed
      - auction_bid_declined
      - auction_cancelled
      - auction_complete
      - direct_buy_deployed
      - direct_buy_declined
      - direct_buy_ownership_transferred
      - direct_buy_state_changed
      - direct_sell_deployed
      - direct_sell_declined
      - direct_sell_ownership_transferred
      - direct_sell_state_changed

    eventCategory:
      type: string
      enum:
      - auction
      - direct_buy
      - direct_sell

    event:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/eventType'
        cat:
          $ref: '#/components/schemas/eventCategory'
        address:
          $ref: '#/components/schemas/address'
        ts:
          $ref: '#/components/schemas/ts'
        args:
          type: object
      required:
        - id
        - type
        - cat
        - address
        - ts


paths:
  /nft/{address}/offers:
    get:
      parameters:
        - name: address
          required: true
          description: nft address
          in: path
          schema:
            $ref: '#/components/schemas/address'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

  /nft/{address}/price-history:
    get:
      parameters:
        - name: address
          required: true
          description: nft address
          in: path
          schema:
            $ref: '#/components/schemas/address'
        - name: scale
          required: false
          description: periods by days/hours
          in: query
          schema:
            type: string
            default: d
            enum:
              - d
              - h
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/nftPrice'

  /nft/{address}/details:
    get:
      parameters:
        - name: address
          required: true
          description: nft address
          in: path
          schema:
            $ref: '#/components/schemas/address'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/nft'

  /nft/{address}/reload-meta:
    post:
      parameters:
        - name: address
          required: true
          description: nft address
          in: path
          schema:
            $ref: '#/components/schemas/address'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/nft'


  /collection/{address}/details:
    get:
      parameters:
        - name: address
          required: true
          description: nft address
          in: path
          schema:
            $ref: '#/components/schemas/address'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/collection'

  /nfts/:
    get:
      parameters:
        - name: owners
          required: false
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/address'
        - name: collections
          required: false
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/address'
        - name: price-from
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: price-to
          required: false
          in: query
          schema:
            type: integer
            format: int64
        - name: price-token
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/address'
        - name: forsale
          required: false
          in: query
          schema:
            type: boolean
        - name: auction
          required: false
          in: query
          schema:
            type: boolean

      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/nft'

  /collections/by-owner/{owner}:
    get:
      parameters:
        - name: owner
          required: true
          description: owner address
          in: path
          schema:
            $ref: '#/components/schemas/address'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collection'

  /auctions:
    get:
      parameters:
        - name: owners
          required: false
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/address'
        - name: collections
          required: false
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/address'
        - name: tokens
          required: false
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/address'
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
            - start-date
            - bids-count
            - average
            - average-in-hour
            - average-in-day
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/auction'

  /auction/{address}/bids:
    get:
      parameters:
        - name: address
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/address'
  
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/auctionBid'

  /owner/{address}/bids-out:
    get:
      parameters:
        - name: address
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/address'
        - name: collections
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/address'
        - name: lastbid
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/auctionBid'

  /owner/{address}/bids-in:
    get:
      parameters:
        - name: address
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/address'
        - name: collections
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/address'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/auctionBid'

  /owner/{address}/offers-out:
    get:
      parameters:
        - name: address
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/address'
        - name: collections
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/address'
        - name: active
          in: query
          required: false
          schema:
            type: boolean

      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

  /owner/{address}/offers-in:
    get:
      parameters:
        - name: address
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/address'
        - name: collections
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/address'
        - name: active
          in: query
          required: false
          schema:
            type: boolean

      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

  /events:
    get:
      parameters:
        - name: nft
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/address'
        - name: collection
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/address'
        - name: initiator
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/address'
        - name: owner
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/address'
        - name: type
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/eventType'
        - name: page-size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/event'